# DAO객체

DAO 객체는 데이터베이스의 데이터에 접근하는 객체입니다.

데이터베이스를 사용해 데이터를 조작하는 기능을 하는 객체를 말합니다.

쉽게 말해서 DAO객체에는 삽입,삭제,수정,읽기와 같은 기능들을 모아 놓은 것입니다.

## DAO에서 사용되는 인터페이스

```java
PreparedStatement pstmt = null;
ResultSet rs = null;
String sql = "select * from  member_tbl_02";
pstmt = conn.prepareStatement(sql);	
rs = pstmt.executeQuery();					
				//next() 메소드 : 조회 결과 다음행을 참조. 참 또는 거짓
				rs.next();	
				System.out.println("첫번째 컬럼의 값 : " + rs.getInt(1));
```

- PreparedStatement
    - **동일한 sql문장이 여러번 반복적으로 수행될 때 사용하는 객체입니다.**
    - **Connection 객체의 prepareStatement( )메소드를 사용하여 생성**
    - **SQL문을 실행하고 생성 된 결과를 반환해줍니다.**
    - **SQL문에 변수나 값을 넣을 때 ? 을 사용합니다.**
    - PreparedStatement의 메서드
        - **executeQuery( )**
            - 조회문(SELECT,SHOW)를 실행할 목적으로 사용된다.
            - ResultSet 객체에 결과값을 담을 수 있습니다.
            
            ```java
            PreparedStatement pstmt = null;
            pstmt.executeQuery("Select * from Example");
            ```
            
        - **executeUpdate( )**
            - 쿼리문에서 (SELECT,SHOW)등을 제외한 create,drop,insert,delete,update등의 쿼리문을 처리할 때사옹된다.
            - 레코드의 건수를 반환합니다.
            - CREATE/DROP 관련 구문에서는 -1을 반환
            
            ```java
            PreparedStatement pstmt = null;
            pstmt.executeUpdate("drop table Example");
            ```
            
- ResultSet
    - **executeQuery(쿼리문)을 통해 쿼리가 실행되면 ResultSet타입으로 반환을 해주어 결과 값을 저장할 수 있다.**
    - **저장된 값을 한 행 단위로 불러올 수 있다.**
    - **한 행에서 값을 가져올 때는 타입을 지정해 불러올 수 있다.**
    - **ResultSet의 메서드**
        - **next( )**
            - next( )메서드는 테이블의 한 행씩 가져온다.
            - 다음행이 내려갈 다음행이 있을 경우 true, 없을경우 false를 반환한ㄷ,
        - **getXXX( )**
            - XXX는 데이터 타입을 의미한다.
            - ex) getString, getInt…
            - 컬럼의 숫자나, 컬럼의 이름을 지정해서 값을 불러올 수 있다